// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package pushnotifications.proxies;

/**
 * Google implementation.
 */
public class GCMSettings extends pushnotifications.proxies.MessagingServiceSettings
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "PushNotifications.GCMSettings";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		SenderId("SenderId"),
		APIKey("APIKey"),
		DTAPMode("DTAPMode"),
		Enabled("Enabled");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public GCMSettings(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "PushNotifications.GCMSettings"));
	}

	protected GCMSettings(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject gCMSettingsMendixObject)
	{
		super(context, gCMSettingsMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("PushNotifications.GCMSettings", gCMSettingsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a PushNotifications.GCMSettings");
	}

	/**
	 * @deprecated Use 'GCMSettings.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static pushnotifications.proxies.GCMSettings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return pushnotifications.proxies.GCMSettings.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static pushnotifications.proxies.GCMSettings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new pushnotifications.proxies.GCMSettings(context, mendixObject);
	}

	public static pushnotifications.proxies.GCMSettings load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return pushnotifications.proxies.GCMSettings.initialize(context, mendixObject);
	}

	public static java.util.List<pushnotifications.proxies.GCMSettings> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<pushnotifications.proxies.GCMSettings> result = new java.util.ArrayList<pushnotifications.proxies.GCMSettings>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//PushNotifications.GCMSettings" + xpathConstraint))
			result.add(pushnotifications.proxies.GCMSettings.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of SenderId
	 */
	public final java.lang.Long getSenderId()
	{
		return getSenderId(getContext());
	}

	/**
	 * @param context
	 * @return value of SenderId
	 */
	public final java.lang.Long getSenderId(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.SenderId.toString());
	}

	/**
	 * Set value of SenderId
	 * @param senderid
	 */
	public final void setSenderId(java.lang.Long senderid)
	{
		setSenderId(getContext(), senderid);
	}

	/**
	 * Set value of SenderId
	 * @param context
	 * @param senderid
	 */
	public final void setSenderId(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long senderid)
	{
		getMendixObject().setValue(context, MemberNames.SenderId.toString(), senderid);
	}

	/**
	 * @return value of APIKey
	 */
	public final java.lang.String getAPIKey()
	{
		return getAPIKey(getContext());
	}

	/**
	 * @param context
	 * @return value of APIKey
	 */
	public final java.lang.String getAPIKey(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.APIKey.toString());
	}

	/**
	 * Set value of APIKey
	 * @param apikey
	 */
	public final void setAPIKey(java.lang.String apikey)
	{
		setAPIKey(getContext(), apikey);
	}

	/**
	 * Set value of APIKey
	 * @param context
	 * @param apikey
	 */
	public final void setAPIKey(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String apikey)
	{
		getMendixObject().setValue(context, MemberNames.APIKey.toString(), apikey);
	}

	/**
	 * Set value of DTAPMode
	 * @param dtapmode
	 */
	public final pushnotifications.proxies.DTAPMode getDTAPMode()
	{
		return getDTAPMode(getContext());
	}

	/**
	 * @param context
	 * @return value of DTAPMode
	 */
	public final pushnotifications.proxies.DTAPMode getDTAPMode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.DTAPMode.toString());
		if (obj == null)
			return null;

		return pushnotifications.proxies.DTAPMode.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of DTAPMode
	 * @param dtapmode
	 */
	public final void setDTAPMode(pushnotifications.proxies.DTAPMode dtapmode)
	{
		setDTAPMode(getContext(), dtapmode);
	}

	/**
	 * Set value of DTAPMode
	 * @param context
	 * @param dtapmode
	 */
	public final void setDTAPMode(com.mendix.systemwideinterfaces.core.IContext context, pushnotifications.proxies.DTAPMode dtapmode)
	{
		if (dtapmode != null)
			getMendixObject().setValue(context, MemberNames.DTAPMode.toString(), dtapmode.toString());
		else
			getMendixObject().setValue(context, MemberNames.DTAPMode.toString(), null);
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final pushnotifications.proxies.GCMSettings that = (pushnotifications.proxies.GCMSettings) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "PushNotifications.GCMSettings";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Override
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
