// This file was generated by Mendix Modeler 7.0.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package tinysqlstudio.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;

public class Microflows
{
	// These are the microflows for the TinySqlStudio module
	public static void initSearchDataForTable(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "TinySqlStudio.InitSearchDataForTable", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void initSearchDataForTxt(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "TinySqlStudio.InitSearchDataForTxt", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void initUpdateData(IContext context)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			Core.execute(context, "TinySqlStudio.InitUpdateData", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void outputCsvFile(IContext context, tinysqlstudio.proxies.SearchObject _sqlEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SqlEntity", _sqlEntity == null ? null : _sqlEntity.getMendixObject());
			Core.execute(context, "TinySqlStudio.OutputCsvFile", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void outputDataForTable(IContext context, tinysqlstudio.proxies.SearchObject _sqlEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SqlEntity", _sqlEntity == null ? null : _sqlEntity.getMendixObject());
			Core.execute(context, "TinySqlStudio.OutputDataForTable", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void outputDataForTxt(IContext context, tinysqlstudio.proxies.SearchObject _sqlEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SqlEntity", _sqlEntity == null ? null : _sqlEntity.getMendixObject());
			Core.execute(context, "TinySqlStudio.OutputDataForTxt", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static java.lang.String retrieveSummary(IContext context, java.lang.String _sql)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("Sql", _sql);
			return (java.lang.String)Core.execute(context, "TinySqlStudio.RetrieveSummary", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void retrieveUpdate(IContext context, tinysqlstudio.proxies.SearchObject _sqlEntity)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("SqlEntity", _sqlEntity == null ? null : _sqlEntity.getMendixObject());
			Core.execute(context, "TinySqlStudio.RetrieveUpdate", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
	public static void selectSql(IContext context, tinysqlstudio.proxies.QueryTemplate _queryTemplate, tinysqlstudio.proxies.SearchObject _searchObject)
	{
		try
		{
			Map<java.lang.String, Object> params = new HashMap<java.lang.String, Object>();
			params.put("QueryTemplate", _queryTemplate == null ? null : _queryTemplate.getMendixObject());
			params.put("SearchObject", _searchObject == null ? null : _searchObject.getMendixObject());
			Core.execute(context, "TinySqlStudio.SelectSql", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}