// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package hr.actions;

import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.connectionbus.data.IDataTable;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import java.util.ArrayList;
import java.util.List;

public class RetrieveAdvancedOql extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.lang.String OqlQuery;
	private java.lang.String ResultEntity;

	public RetrieveAdvancedOql(IContext context, java.lang.String OqlQuery, java.lang.String ResultEntity)
	{
		super(context);
		this.OqlQuery = OqlQuery;
		this.ResultEntity = ResultEntity;
	}

	@Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
        List<IMendixObject> resultList = new ArrayList<IMendixObject>();
        IDataTable resultDT = Core.retrieveOQLDataTable(getContext(), this.OqlQuery);
        int colCount = resultDT.getSchema().getColumnCount();
        // Loop through records, add to mendix object list
        resultDT.forEach(row -> {
			// instantiate mendix object as specified by ResultEnitity parameter
            IMendixObject obj = Core.instantiate(getContext(), this.ResultEntity);
            for (int i = 0; i < colCount; i++) {
				// get column name
                String colName = resultDT.getSchema().getColumnSchema(i).getName();
				// get column value
                Object colValue = row.getValue(getContext(), i);
                if(obj.hasMember(colName)) {
					// set result object value
                    obj.setValue(getContext(), colName, colValue);
                } else {
                    logger.info(String.format("Target entity does not have attribute named %s",colName));
                }
            }
            resultList.add(obj);
        });
        return resultList;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "RetrieveAdvancedOql";
	}

	// BEGIN EXTRA CODE
    private final ILogNode logger = Core.getLogger(this.getClass().getName());
	// END EXTRA CODE
}
